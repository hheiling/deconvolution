
R version 3.6.2 (2019-12-12) -- "Dark and Stormy Night"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> ## when writing data into text file, it may use scientific format
> ## when you read it into c, and using atoi. it will make mistakes
> ## say 97000000 is written as 9.7e+07, and c think it is 9
> ## options("scipen") can control write out behavior
> 
> options(scipen=20)
> annoVersion = "gencode.v15"
> 
> library(data.table)
> library(stringr)
> 
> # ---------------------------------------------------------------------
> # read gtf file
> # ---------------------------------------------------------------------
> 
> date()
[1] "Mon Feb 17 22:37:53 2020"
> inf = fread("gencode.v15.annotation.gtf.gz")
Warning message:
In fread("gencode.v15.annotation.gtf.gz") :
  Detected 1 column names but the data has 9 columns (i.e. invalid file). Added 8 extra default column names at the end.
> date()
[1] "Mon Feb 17 22:38:02 2020"
> 
> dim(inf)
[1] 2628422       9
> inf[1:2,]
   ##date: 2013-01-21     V2         V3    V4    V5 V6 V7 V8
1:               chr1 HAVANA       gene 11869 14412  .  +  .
2:               chr1 HAVANA transcript 11869 14409  .  +  .
                                                                                                                                                                                                                                                                                                                                        V9
1:                                                                      gene_id "ENSG00000223972.4"; transcript_id "ENSG00000223972.4"; gene_type "pseudogene"; gene_status "KNOWN"; gene_name "DDX11L1"; transcript_type "pseudogene"; transcript_status "KNOWN"; transcript_name "DDX11L1"; level 2; havana_gene "OTTHUMG00000000961.2";
2: gene_id "ENSG00000223972.4"; transcript_id "ENST00000456328.2"; gene_type "pseudogene"; gene_status "KNOWN"; gene_name "DDX11L1"; transcript_type "processed_transcript"; transcript_status "KNOWN"; transcript_name "DDX11L1-002"; level 2; tag "basic"; havana_gene "OTTHUMG00000000961.2"; havana_transcript "OTTHUMT00000362751.1";
> 
> names(inf) = c("chr", "source", "feature", "start", "end", 
+ "score", "strand", "frame", "anno")
> 
> sapply(c("chr", "source", "feature", "score", "strand", "frame"),
+        function(xx) table(inf[,..xx], useNA="ifany"))
$chr

  chr1  chr10  chr11  chr12  chr13  chr14  chr15  chr16  chr17  chr18  chr19 
238798  94722 161226 161204  37939  95850  97594 126749 170645  45305 165737 
  chr2  chr20  chr21  chr22   chr3   chr4   chr5   chr6   chr7   chr8   chr9 
190978  54857  27939  58877 160974 100932 115903 118644 124131  96471  92678 
  chrM   chrX   chrY 
   143  80715   9411 

$source

ENSEMBL  HAVANA 
 370784 2257638 

$feature

           CDS           exon           gene Selenocysteine    start_codon 
        728430        1201574          56680            114          84665 
    stop_codon     transcript            UTR 
         76505         195433         285021 

$score

      . 
2628422 

$strand

      -       + 
1298794 1329628 

$frame

      .       0       1       2 
1738822  538935  141680  208985 

> 
> inf = inf[which(inf$feature == "exon"),]
> dim(inf)
[1] 1201574       9
> inf[1:2,]
    chr source feature start   end score strand frame
1: chr1 HAVANA    exon 11869 12227     .      +     .
2: chr1 HAVANA    exon 12613 12721     .      +     .
                                                                                                                                                                                                                                                                                                                                                      anno
1: gene_id "ENSG00000223972.4"; transcript_id "ENST00000456328.2"; gene_type "pseudogene"; gene_status "KNOWN"; gene_name "DDX11L1"; transcript_type "processed_transcript"; transcript_status "KNOWN"; transcript_name "DDX11L1-002"; exon_number 1;  level 2; tag "basic"; havana_gene "OTTHUMG00000000961.2"; havana_transcript "OTTHUMT00000362751.1";
2: gene_id "ENSG00000223972.4"; transcript_id "ENST00000456328.2"; gene_type "pseudogene"; gene_status "KNOWN"; gene_name "DDX11L1"; transcript_type "processed_transcript"; transcript_status "KNOWN"; transcript_name "DDX11L1-002"; exon_number 2;  level 2; tag "basic"; havana_gene "OTTHUMG00000000961.2"; havana_transcript "OTTHUMT00000362751.1";
> inf[which(inf$source=="ENSEMBL")[1:2],]
    chr  source feature start   end score strand frame
1: chr1 ENSEMBL    exon 11872 12227     .      +     .
2: chr1 ENSEMBL    exon 12613 12721     .      +     .
                                                                                                                                                                                                                                                                                                 anno
1: gene_id "ENSG00000223972.4"; transcript_id "ENST00000515242.2"; gene_type "pseudogene"; gene_status "KNOWN"; gene_name "DDX11L1"; transcript_type "unprocessed_pseudogene"; transcript_status "KNOWN"; transcript_name "DDX11L1-201"; exon_number 1;  level 3; havana_gene "OTTHUMG00000000961.2";
2: gene_id "ENSG00000223972.4"; transcript_id "ENST00000515242.2"; gene_type "pseudogene"; gene_status "KNOWN"; gene_name "DDX11L1"; transcript_type "unprocessed_pseudogene"; transcript_status "KNOWN"; transcript_name "DDX11L1-201"; exon_number 2;  level 3; havana_gene "OTTHUMG00000000961.2";
> 
> gc()
           used  (Mb) gc trigger  (Mb) limit (Mb)  max used  (Mb)
Ncells  1672009  89.3    3057850 163.4         NA   1942367 103.8
Vcells 68790541 524.9  127971797 976.4      32768 127543664 973.1
> 
> 
> # ---------------------------------------------------------------------
> # obtain gene_id, transcript_id, gene_name, and transcript_name
> # ---------------------------------------------------------------------
> 
> geneId = str_extract(inf$anno, '(?<=gene_id\\s")(\\S+)(?=";)')
> tranId = str_extract(inf$anno, '(?<=transcript_id\\s")(\\S+)(?=";)')
> geneNm = str_extract(inf$anno, '(?<=gene_name\\s")(\\S+)(?=";)')
> tranNm = str_extract(inf$anno, '(?<=transcript_name\\s")(\\S+)(?=";)')
> 
> exonId = paste(inf$chr, inf$start, inf$end, sep=":")
> 
> tid = table(exonId)
> table(tid)
tid
     1      2      3      4      5      6      7      8      9     10     11 
379739  55486  34639  25946  19610  13987   9742   7058   4826   3393   2366 
    12     13     14     15     16     17     18     19     20     21     22 
  1615   1235    920    661    451    295    203    167    134     85     87 
    23     24     25     26     27     28     29     30     31     32     33 
    80     51     46     16     15     18     13      7     16     27     12 
    34     35     36     37     38     40     42     43     44     50     53 
     6      6      6      3      3      4      1      2      1      1      2 
    58     60     61     71 
     1      1      1      1 
> sort(tid, decreasing=TRUE)[1:3]
exonId
chr16:57684165:57684263 chr14:21490551:21490656 chr14:21490221:21490341 
                     71                      61                      60 
> 
> pasteUniqu = function(v){paste(unique(v),collapse=":")}
> geneId2use = tapply(geneId, exonId, pasteUniqu)
> 
> message("there are ", length(geneId2use), " unique exons.")
there are 562985 unique exons.
> 
> xx = grep(":", geneId2use)
> if(length(xx) > 0){
+   message(length(xx), " exons belong to more than one gene.")
+   geClusters = strsplit(geneId2use[xx], split=":")
+   t1         = table(sapply(geClusters, length))
+   message("their distributuion is")
+   print(t1)
+ }
5231 exons belong to more than one gene.
their distributuion is

   2    3    4    5    9   14   15   19   21 
4952  252   13    5    3    1    2    1    2 
> 
> tranId2use = tapply(tranId, exonId, pasteUniqu)
> xx = grep(":", tranId2use)
> if(length(xx) > 0){
+   message(length(xx), " exons belong to more than one transcript.")
+   trClusters = strsplit(tranId2use[xx], split=":")
+   t1         = table(sapply(trClusters, length))
+   message("their distributuion is")
+   print(t1)
+ }
183246 exons belong to more than one transcript.
their distributuion is

    2     3     4     5     6     7     8     9    10    11    12    13    14 
55486 34639 25946 19610 13987  9742  7058  4826  3393  2366  1615  1235   920 
   15    16    17    18    19    20    21    22    23    24    25    26    27 
  661   451   295   203   167   134    85    87    80    51    46    16    15 
   28    29    30    31    32    33    34    35    36    37    38    40    42 
   18    13     7    16    27    12     6     6     6     3     3     4     1 
   43    44    50    53    58    60    61    71 
    2     1     1     2     1     1     1     1 
> 
> geneNm2use = tapply(geneNm, exonId, pasteUniqu)
> tranNm2use = tapply(tranNm, exonId, pasteUniqu)
> 
> # ---------------------------------------------------------
> # drop duplicated exons
> # ---------------------------------------------------------
> 
> infNew = list()
> nms = names(inf)
> nms[1:8]
[1] "chr"     "source"  "feature" "start"   "end"     "score"   "strand" 
[8] "frame"  
> 
> for(i in 1:8){
+   nm1 = nms[i]  
+   cat(i, nm1, "\n")
+ 
+   if(nm1 == "source" || nm1 == "strand"){
+     it1 = tapply(inf[[nm1]], exonId, pasteUniqu)
+   }else{
+     it1 = tapply(inf[[nm1]], exonId, unique)
+   }
+   
+   if(mode(it1) == "list") { stop("hm... non unique ", nm1, "\n") }
+   
+   infNew[[nm1]] = it1
+ }
1 chr 
2 source 
3 feature 
4 start 
5 end 
6 score 
7 strand 
8 frame 
> 
> geneId2use = paste("gene_id \"", geneId2use, "\";", sep="")
> tranId2use = paste("transcript_id \"", tranId2use, "\";", sep="")
> geneNm2use = paste("gene_name \"", geneNm2use, "\";", sep="")
> tranNm2use = paste("transcript_name \"", tranNm2use, "\";", sep="")
> 
> infNew$anno = paste(geneId2use, tranId2use, geneNm2use, tranNm2use, sep=" ")
> 
> infNew = as.data.frame(infNew)
> dim(infNew)
[1] 562985      9
> infNew[1:2,]
                        chr  source feature    start      end score strand
chr1:10002682:10002807 chr1  HAVANA    exon 10002682 10002807     .      -
chr1:10002682:10002826 chr1 ENSEMBL    exon 10002682 10002826     .      -
                       frame
chr1:10002682:10002807     .
chr1:10002682:10002826     .
                                                                                                                                anno
chr1:10002682:10002807 gene_id "ENSG00000162441.6"; transcript_id "ENST00000486804.1"; gene_name "LZIC"; transcript_name "LZIC-003";
chr1:10002682:10002826 gene_id "ENSG00000162441.6"; transcript_id "ENST00000400903.2"; gene_name "LZIC"; transcript_name "LZIC-201";
> 
> # --------------------------------------------------------- 
> # sort the exons
> # ---------------------------------------------------------
> 
> od     = order(infNew$chr, infNew$start, infNew$end)
> any(diff(od) < 0)
[1] TRUE
> infNew = infNew[od,]
> 
> # ---------------------------------------------------------
> # write out
> # ---------------------------------------------------------
> 
> id  = paste(infNew$chr, infNew$start, infNew$end, sep=":")
> uid = unique(id)
> 
> length(id)
[1] 562985
> length(uid)
[1] 562985
> 
> outFile = sprintf("%s.unique.exon.gtf", annoVersion)
> 
> write.table(infNew, file = outFile, append = FALSE, 
+   quote = FALSE, sep = "\t", row.names = FALSE, 
+   col.names = FALSE)
> 
> system(paste("gzip -f", outFile))
> 
> sessionInfo()
R version 3.6.2 (2019-12-12)
Platform: x86_64-apple-darwin15.6.0 (64-bit)
Running under: macOS Catalina 10.15.3

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/3.6/Resources/lib/libRblas.0.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/3.6/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] stringr_1.4.0     data.table_1.12.8

loaded via a namespace (and not attached):
[1] compiler_3.6.2    magrittr_1.5      tools_3.6.2       R.methodsS3_1.8.0
[5] stringi_1.4.5     R.utils_2.9.2     R.oo_1.23.0      
> gc()
            used  (Mb) gc trigger   (Mb) limit (Mb)  max used   (Mb)
Ncells   3927904 209.8    7924222  423.2         NA   7924222  423.2
Vcells 105721282 806.6  154128933 1176.0      32768 154128933 1176.0
> q(save="no")
> proc.time()
   user  system elapsed 
745.913   4.242 700.225 
